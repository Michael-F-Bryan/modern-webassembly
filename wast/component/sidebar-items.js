initSidebarItems({"enum":[["AliasKind","aliaskind   ::= (module ?) | (component ?) | (instance ?) | (func ?) | (value ?) | (type ?) | (table ?) | (memory ?) | (global ?) | … other Post-MVP Core definition kinds"],["AliasTarget","aliastarget ::= export   | outer  "],["CanonOpt","Canonical ABI options."],["ComponentArg",""],["ComponentField","A listing of all possible fields that can make up a WebAssembly component."],["ComponentFuncBody","The body of a `ComponentFunc`."],["ComponentFuncKind","Possible ways to define a function in the text format."],["ComponentKind","The different kinds of ways to define a component."],["ComponentTypeDef","A definition of a type."],["ComponentTypeField","A field of a type for a nested component"],["ComponentTypeUse","A reference to a type defined in this component."],["DefType","deftype           ::=  |  |  |  | "],["DefTypeKind","Different kinds of elements that can be exported from a WebAssembly component, contained in a [`ComponentExport`]."],["InstanceKind","Possible ways to define a instance in the text format."],["InstanceTypeField","A field of a type for a nested instance"],["InterType","An interface-types type."],["InterTypeRef","An interface-types type."],["ItemKind",""],["ModuleArg",""],["ModuleKind","Possible ways to define a nested module in the text format."],["ModuleTypeDef","The contents of a [`ModuleType`]."],["NestedComponentKind","The different kinds of ways to define a nested component."],["Primitive","An interface-types type."]],"struct":[["Alias","An `alias` statement used to juggle indices with nested components."],["CanonLift","Extra information associated with canon.lift instructions."],["CanonLower","Extra information associated with canon.lower instructions."],["Case","An interface-types variant case."],["Component","A parsed WebAssembly component module."],["ComponentExport","A entry in a WebAssembly component’s export section."],["ComponentExportType","The type of an exported item from an component or instance."],["ComponentFunc","A WebAssembly function to be inserted into a module."],["ComponentFunctionParam","A parameter of a [`ComponentFunctionType`]."],["ComponentFunctionType","A component function type with parameters and results."],["ComponentImport","An `import` statement and entry in a WebAssembly component."],["ComponentType","A type for a nested component"],["CoreExport","A entry in a WebAssembly module’s export section."],["Enum","An interface-types enum, aka a discriminated union with unit arms."],["Expected","An interface-types expected, aka an result."],["Field","An interface-types record field."],["Flags","An interface-types flags, aka a fixed-sized bitfield with named fields."],["IndexOrRef","Convenience structure to parse `$f` or `(item $f)`."],["InlineImport","A listing of a inline `(import \"foo\")` statement."],["Instance","A nested WebAssembly instance to be created as part of a module."],["InstanceType","A type for a nested instance"],["ItemRef","Parses `(func $foo)`"],["ItemSig",""],["List","An interface-types list, aka a fixed-size array."],["Module","A nested WebAssembly module to be created as part of a component."],["ModuleType","A type for a nested module"],["NamedComponentArg","Arguments to the component `instantiate` instruction"],["NamedModuleArg","Arguments to the module `instantiate` instruction"],["NestedComponent","A parsed WebAssembly component module."],["OptionType","An interface-types optional, aka an option."],["Record","An interface-types record, aka a struct."],["Start","A function to call at instantiation time."],["Tuple","An interface-types tuple, aka a record with anonymous fields."],["TypeField","A type declaration in a component."],["Union","An interface-types union, aka a discriminated union with anonymous arms."],["ValueType","A value type."],["Variant","An interface-types variant, aka a discriminated union with named arms."]]});